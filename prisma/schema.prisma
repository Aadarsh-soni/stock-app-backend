generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  STAFF
}

enum TxType {
  PURCHASE
  SALE
  ADJUSTMENT
  TRANSFER_IN
  TRANSFER_OUT
  OPENING
}

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String?  @unique
  password  String?
  role      Role     @default(STAFF)
  createdAt DateTime @default(now())

  transactions StockTransaction[] @relation("TxCreatedBy")
}

model Product {
  id           String   @id @default(uuid())
  name         String
  sku          String   @unique
  barcode      String?
  unit         String
  cost         Decimal  @db.Decimal(12, 2)
  price        Decimal  @db.Decimal(12, 2)
  reorderLevel Int      @default(0)
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())

  transactions  StockTransaction[]
  purchaseItems PurchaseItem[]
  saleItems     SaleItem[]
  productStocks ProductStock[]
  avgCosts      ProductCostAvg[]
}

model Warehouse {
  id      String  @id @default(uuid())
  name    String
  code    String  @unique
  address String?

  transactions  StockTransaction[]
  purchaseItems PurchaseItem[]
  saleItems     SaleItem[]
  productStocks ProductStock[]
  avgCosts      ProductCostAvg[]
}

model StockTransaction {
  id          String    @id @default(uuid())
  product     Product   @relation(fields: [productId], references: [id])
  productId   String
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String
  type        TxType
  qty         Decimal   @db.Decimal(12, 3)
  unitCost    Decimal?  @db.Decimal(12, 2)
  reason      String?
  refTable    String?
  refId       String?
  createdAt   DateTime  @default(now())
  createdBy   User      @relation("TxCreatedBy", fields: [createdById], references: [id])
  createdById String
}

model Supplier {
  id        String     @id @default(uuid())
  name      String
  phone     String?
  gstin     String?
  purchases Purchase[]
}

model Purchase {
  id         String         @id @default(uuid())
  supplier   Supplier       @relation(fields: [supplierId], references: [id])
  supplierId String
  docDate    DateTime
  invoiceNo  String
  total      Decimal        @db.Decimal(12, 2)
  items      PurchaseItem[]
  createdAt  DateTime       @default(now())
}

model PurchaseItem {
  id          String    @id @default(uuid())
  purchase    Purchase  @relation(fields: [purchaseId], references: [id])
  purchaseId  String
  product     Product   @relation(fields: [productId], references: [id])
  productId   String
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String
  qty         Decimal   @db.Decimal(12, 3)
  unitCost    Decimal   @db.Decimal(12, 2)
}

model Customer {
  id    String  @id @default(uuid())
  name  String
  phone String?
  sales Sale[]
}

model Sale {
  id         String     @id @default(uuid())
  customer   Customer?  @relation(fields: [customerId], references: [id])
  customerId String?
  docDate    DateTime
  billNo     String
  total      Decimal    @db.Decimal(12, 2)
  items      SaleItem[]
  createdAt  DateTime   @default(now())
}

model SaleItem {
  id          String    @id @default(uuid())
  sale        Sale      @relation(fields: [saleId], references: [id])
  saleId      String
  product     Product   @relation(fields: [productId], references: [id])
  productId   String
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String
  qty         Decimal   @db.Decimal(12, 3)
  unitPrice   Decimal   @db.Decimal(12, 2)
}

model ProductStock {
  product     Product   @relation(fields: [productId], references: [id])
  productId   String
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String
  qtyOnHand   Decimal   @db.Decimal(14, 3)
  updatedAt   DateTime  @default(now())

  @@id([productId, warehouseId])
  @@index([warehouseId])
}

model ProductCostAvg {
  product     Product   @relation(fields: [productId], references: [id])
  productId   String
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String
  avgCost     Decimal   @db.Decimal(12, 2)
  updatedAt   DateTime  @default(now())

  @@id([productId, warehouseId])
  @@index([warehouseId])
}